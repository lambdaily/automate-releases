name: Release Notes AI

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Obtener último tag anterior
        id: lasttag
        run: |
          tag=$(git tag --sort=-creatordate | grep -v "${GITHUB_REF_NAME}" | head -n 1)
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Obtener commits desde el último tag
        id: changelog
        run: |
          if [ -z "${{ steps.lasttag.outputs.tag }}" ]; then
            echo "COMMITS=$(git log --pretty=format:'- %s')" >> $GITHUB_ENV
          else
            echo "COMMITS=$(git log ${{ steps.lasttag.outputs.tag }}..HEAD --pretty=format:'- %s')" >> $GITHUB_ENV
          fi

      - name: Resumir commits con SambaNova
        id: resumen
        env:
          SAMBANOVA_API_KEY: ${{ secrets.SAMBANOVA_API_KEY }}
          COMMITS: ${{ env.COMMITS }}
        run: |
          json_payload=$(jq -n \
            --arg commits "$COMMITS" \
            '{
              stream: false,
              model: "DeepSeek-R1-0528",
              messages: [
                {role: "system", content: "Eres un asistente útil que genera notas de versión profesionales en español a partir de mensajes de commit."},
                {role: "user", content: "Resume estos commits para una nota de versión:\n\($commits)"}
              ]
            }')
          body=$(curl -s -X POST https://api.sambanova.ai/v1/chat/completions \
            -H "Authorization: Bearer $SAMBANOVA_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$json_payload" | jq -r '.choices[0].message.content')
          echo "RELEASE_BODY=$body" >> $GITHUB_ENV

      - name: Crear Release en GitHub
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ env.RELEASE_BODY }}
